name: Backend CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Clean Gradle Cache
        run: ./gradlew clean --no-daemon || true

      - name: Build with Gradle Wrapper
        run: |
          chmod +x gradlew
          ./gradlew clean build -x test --no-daemon

      - name: Rename Build File
        run: mv $(ls ./build/libs/*.jar | head -n 1) ./cdtest.jar

      - name: Debug Secrets
        run: |
          echo "EC2_HOST: '${{ secrets.EC2_HOST }}'"
          echo "EC2_USERNAME: '${{ secrets.EC2_USERNAME }}'"
          echo "EC2_SSH_KEY length: $(echo "${{ secrets.EC2_SSH_KEY }}" | wc -c)"

      - name: Transfer Build File to EC2 via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: cdtest.jar
          target: /home/ubuntu

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo fuser -k -n tcp 8080 || true
            sudo nohup java -jar cdtest.jar > ./output.log 2>&1 &
          debug: true