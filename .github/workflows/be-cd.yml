name: Backend CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code # 저장소에 있는 코드 가져오기
        uses: actions/checkout@v4

      - name: Set up JDK 17 # JDK 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Gradle # Gradle 설정, 종속성 및 빌드 캐시를 자동으로 관리
        uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
        with:
          cache-read-only: false # 캐시 읽기 및 쓰기 활성화

      - name: Grant Execute Permission For Gradlew # Gradlew 실행 권한 부여
        run: chmod +x gradlew

      - name: Build with Gradle # Gradle 빌드 실행
        run: | # 실패 즉시 중단
          set -e
          ./gradlew clean build

      - name: Test with Gradle # 테스트 실행
        run: |
          set -e
          ./gradlew test

      - name: Rename Build File # 빌드된 JAR 파일 이름 변경
        run: mv $(find ./build/libs -name "*.jar" | head -n 1) ./cdtest.jar

#      - name: Debug Secrets # Secrets 디버깅
#        run: |
#          echo "EC2_HOST: '${{ secrets.EC2_HOST }}'"
#          echo "EC2_USERNAME: '${{ secrets.EC2_USERNAME }}'"
#          echo "EC2_SSH_KEY length: $(echo "${{ secrets.EC2_SSH_KEY }}" | wc -c)"

      - name: Transfer Build File to EC2 via SCP # JAR 파일을 EC2로 전송
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: cdtest.jar
          target: /home/ubuntu

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to EC2 via SSH # EC2 서버에서 JAR 실행
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            sudo fuser -k -n tcp 8080 || true
#            8080 포트에서 실행 중인 프로세스 종료
#            || true → 프로세스가 없더라도 스크립트가 중단되지 않도록 설정
            cd /home/ubuntu
            sudo nohup java -jar cdtest.jar > output.log 2>&1 &
            sleep 2  # 실행 안정성을 위해 2초 대기
            mv output.log output_$(date +%Y%m%d-%H%M%S).log
#            백그라운드에서 cdtest.jar 실행 (nohup 사용)
#            실행 로그를 output.log에 저장
#            mv output.log output_$(date +%Y%m%d-%H%M%S).log
